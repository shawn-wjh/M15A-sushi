openapi: 3.0.0
info:
  title: M15ASushi - Invoice Management API
  description: API for creating validated UBL 2.4-compliant invoices.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production Server
paths:
  /v1/user/register:
    post:
      summary: Register a new user
      description: |
        This endpoint allows a new user to register by providing their email, name, and password. The email must be unique, and the password must meet the specified complexity requirements.
      operationId: registerUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                  example: "company name"
                  description: "Must be at least 3 characters long and contain only letters and spaces."
                password:
                  type: string
                  description: "Must be at least 8 characters long, include one uppercase letter, one number, and one special character."
                  example: password123!
              required:
                - email
                - name
                - password
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "409":
          description: Email already registered
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/user/login:
    post:
      summary: User login
      description: |
        This endpoint allows a registered user to log in by providing their email and password. A successful login returns a token for authentication in subsequent requests.
      operationId: loginUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  example: password123!
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/user/logout:
    post:
      summary: User logout
      description: |
        This endpoint logs out the user by invalidating their authentication token, effectively ending their session.
      operationId: logoutUser
      tags:
        - Users
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Logout successful
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/user:
    put:
      summary: Update user profile
      description: |
        This endpoint allows a user to update their profile information, including email, name, and password. The email must be unique, and the password must meet the specified complexity requirements.
      operationId: updateUser
      tags:
        - Users
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: "New email address (optional)."
                name:
                  type: string
                  description: "New name (must be at least 3 characters long, only letters and spaces, optional)."
                password:
                  type: string
                  description: "New password (must be at least 8 characters long, include one uppercase letter, one number, and one special character, optional)."
              example:
                email: newemail@example.com
                name: "New Company Name"
                password: "NewPassword123!"
      responses:
        "200":
          description: User updated successfully
        "400":
          description: Invalid details -- see schema
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "409":
          description: Email already in use
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
                    
    delete:
      summary: Remove user profile
      description: |
        This endpoint allows a user to delete their profile, removing all associated data from the system.
      operationId: removeUser
      tags:
        - Users
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User removed successfully
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/create:
    post:
      summary: Create a new invoice
      description: |
        This endpoint allows the creation of a new invoice with various fields such as supplier, buyer, total amount, currency, issue date, due date, and items. It also includes buyer and supplier contact details, addresses, and payment information.
      operationId: createInvoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                supplier:
                  type: string
                  example: supplier name
                buyer:
                  type: string
                  example: buyer name
                total:
                  type: number
                  format: double
                  example: 9.99
                  description: Must be non-negative
                currency:
                  type: string
                  description: Must be a valid 3 letter currency code
                issueDate:
                  type: string
                  format: date
                  description: Must be a past date
                dueDate:
                  type: string
                  format: date
                  description: Must be on or after the issue date
                items:
                  type: object
                  properties:
                    name: 
                      type: string
                    count:
                      type: number
                      example: 1
                      description: Must be greater than 0
                    price:
                      type: number
                      format: double
                      example: 9.99
                buyerAddress:
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the buyer
                    country:
                      type: string
                      description: Country code of the buyer
                buyerEmail:
                  type: string
                  format: email
                  description: Email address of the buyer
                buyerPhone:
                  type: string
                  description: Phone number of the buyer
                supplierAddress:
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the supplier
                    country:
                      type: string
                      description: Country code of the supplier
                supplierEmail:
                  type: string
                  format: email
                  description: Email address of the supplier
                supplierPhone:
                  type: string
                  description: Phone number of the supplier
                paymentAccountId:
                  type: string
                  description: Bank account number
                paymentAccountName:
                  type: string
                  description: Account name
                financialInstitutionBranchId:
                  type: string
                  description: Branch identifier such as BSB
      responses:
        "200":
          description: Invoice created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceid:
                    type: string
        "400":
          description: If there are any missing fields in the request body. 
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

    get:
      summary: List invoices with optional filters
      description: |
        This endpoint retrieves a list of invoices belonging to the user. It supports optional filters such as limit, offset, sort, and order to customize the results.
      operationId: listInvoices
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: "Number of invoices to return (default: 10)."
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
          description: "Pagination: number of invoices to skip (default: 0)."
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum: ["issuedate", "duedate", "total"]
          description: "Sort by field"
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum: ["asc", "desc"]
          description: "Sorting order"
      responses:
        "200":
          description: List of invoices retrieved successfully
          content:
            application/xml:
              schema:
                type: array
                xml:
                  wrapped: true
                  name: Invoices
                  namespace: "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
                items:
                  type: object
                  xml:
                    name: Invoice
                  properties:
                    ID:
                      type: string
                      example: INV-001
                      xml:
                        name: cbc:ID
                    IssueDate:
                      type: string
                      format: date
                      xml:
                        name: cbc:IssueDate
                    DueDate:
                      type: string
                      format: date
                      xml:
                        name: cbc:DueDate
                    InvoiceTypeCode:
                      type: string
                      example: 380
                      xml:
                        name: cbc:InvoiceTypeCode
                    DocumentCurrencyCode:
                      type: string
                      example: AUD
                      xml:
                        name: cbc:DocumentCurrencyCode
                    CustomizationID:
                      type: string
                      xml:
                        name: cbc:CustomizationID
                    ProfileID:
                      type: string
                      xml:
                        name: cbc:ProfileID
                    OrderReference:
                      type: object
                      xml:
                        name: cac:OrderReference
                      properties:
                        ID:
                          type: string
                          xml:
                            name: cbc:ID
                    InvoiceDocumentReference:
                      type: object
                      xml:
                        name: cac:InvoiceDocumentReference
                      properties:
                        ID:
                          type: string
                          xml:
                            name: cbc:ID
                    AccountingSupplierParty:
                      type: object
                      xml:
                        name: cac:AccountingSupplierParty
                      properties:
                        Party:
                          type: object
                          xml:
                            name: cac:Party
                          properties:
                            PartyName:
                              type: object
                              xml:
                                name: cac:PartyName
                              properties:
                                Name:
                                  type: string
                                  xml:
                                    name: cbc:Name
                            PostalAddress:
                              type: object
                              xml:
                                name: cac:PostalAddress
                              properties:
                                StreetName:
                                  type: string
                                  xml:
                                    name: cbc:StreetName
                                Country:
                                  type: object
                                  xml:
                                    name: cac:Country
                                  properties:
                                    IdentificationCode:
                                      type: string
                                      xml:
                                        name: cbc:IdentificationCode
                            Contact:
                              type: object
                              xml:
                                name: cac:Contact
                              properties:
                                Telephone:
                                  type: string
                                  xml:
                                    name: cbc:Telephone
                                ElectronicMail:
                                  type: string
                                  xml:
                                    name: cbc:ElectronicMail
                    AccountingCustomerParty:
                      type: object
                      xml:
                        name: cac:AccountingCustomerParty
                      properties:
                        Party:
                          type: object
                          xml:
                            name: cac:Party
                          properties:
                            PartyName:
                              type: object
                              xml:
                                name: cac:PartyName
                              properties:
                                Name:
                                  type: string
                                  xml:
                                    name: cbc:Name
                            PostalAddress:
                              type: object
                              xml:
                                name: cac:PostalAddress
                              properties:
                                StreetName:
                                  type: string
                                  xml:
                                    name: cbc:StreetName
                                Country:
                                  type: object
                                  xml:
                                    name: cac:Country
                                  properties:
                                    IdentificationCode:
                                      type: string
                                      xml:
                                        name: cbc:IdentificationCode
                            Contact:
                              type: object
                              xml:
                                name: cac:Contact
                              properties:
                                Telephone:
                                  type: string
                                  xml:
                                    name: cbc:Telephone
                                ElectronicMail:
                                  type: string
                                  xml:
                                    name: cbc:ElectronicMail
                    PaymentMeans:
                      type: object
                      xml:
                        name: cac:PaymentMeans
                      properties:
                        PayeeFinancialAccount:
                          type: object
                          xml:
                            name: cac:PayeeFinancialAccount
                          properties:
                            ID:
                              type: string
                              xml:
                                name: cbc:ID
                            Name:
                              type: string
                              xml:
                                name: cbc:Name
                            FinancialInstitutionBranch:
                              type: object
                              xml:
                                name: cac:FinancialInstitutionBranch
                              properties:
                                ID:
                                  type: string
                                  xml:
                                    name: cbc:ID
                    LegalMonetaryTotal:
                      type: object
                      xml:
                        name: cac:LegalMonetaryTotal
                      properties:
                        PayableAmount:
                          type: object
                          xml:
                            name: cbc:PayableAmount
                          properties:
                            CurrencyId:
                              type: string
                              example: AUD
                              xml:
                                attribute: true
                            value:
                              type: number
                              format: double
                              description: Total amount payable
                              example: "0.00"
                    PaymentTerms:
                      type: object
                      xml:
                        name: cac:PaymentTerms
                      properties:
                        PaymentDueDate:
                          type: string
                          format: date
                          xml:
                            name: cbc:PaymentDueDate
                    InvoiceLine:
                      type: array
                      xml:
                        name: cac:InvoiceLine
                      items:
                        type: object
                        properties:
                          ID:
                            type: string
                            xml:
                              name: cbc:ID
                          InvoicedQuantity:
                            type: number
                            format: integer
                            xml:
                              name: cbc:InvoicedQuantity
                          LineExtensionAmount:
                            type: number
                            format: double
                            xml:
                              name: cbc:LineExtensionAmount
                          Item:
                            type: object
                            xml: 
                              name: cac:Item
                            properties:
                              Name:
                                type: string
                                xml:
                                  name: cbc:Name
                              ClassifiedTaxCategory:
                                type: object
                                xml:
                                  name: cac:ClassifiedTaxCategory
                                properties:
                                  ID:
                                    type: string
                                    xml:
                                      name: cbc:ID
                                  TaxScheme:
                                    type: object
                                    xml:
                                      name: cac:TaxScheme
                                    properties:
                                      ID:
                                        type: string
                                        xml:
                                          name: cbc:ID
                          Price:
                            type: object
                            xml:
                              name: cac:Price
                            properties:
                              PriceAmount:
                                type: number
                                format: double
                                xml:
                                  name: cbc:PriceAmount
                              BaseQuantity:
                                type: number
                                format: integer
                                xml:
                                  name: cbc:BaseQuantity
                description: Array of UBL-compliant XML invoices
        "400":
          description: |
            Invalid details:
            - limit less than 1
            - offset less than 0
            - invalid sort query
            - invalid order query
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/{invoiceid}:
    get:
      summary: Retrieve an invoice
      description: |
        This endpoint retrieves a specific invoice by its ID, only allowing access to the invoice if the user has access to the invoice.
      operationId: getInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved invoice successfully
          content:
            application/xml:
              schema:
                type: object
                description: UBL-compliant XML invoice
                xml:
                  name: Invoice
                properties:
                  ID:
                    type: string
                    example: INV-001
                    xml:
                      name: cbc:ID
                  IssueDate:
                    type: string
                    format: date
                    xml:
                      name: cbc:IssueDate
                  DueDate:
                    type: string
                    format: date
                    xml:
                      name: cbc:DueDate
                  InvoiceTypeCode:
                    type: string
                    example: 380
                    xml:
                      name: cbc:InvoiceTypeCode
                  DocumentCurrencyCode:
                    type: string
                    example: AUD
                    xml:
                      name: cbc:DocumentCurrencyCode
                  CustomizationID:
                    type: string
                    xml:
                      name: cbc:CustomizationID
                  ProfileID:
                    type: string
                    xml:
                      name: cbc:ProfileID
                  OrderReference:
                    type: object
                    xml:
                      name: cac:OrderReference
                    properties:
                      ID:
                        type: string
                        xml:
                          name: cbc:ID
                  InvoiceDocumentReference:
                    type: object
                    xml:
                      name: cac:InvoiceDocumentReference
                    properties:
                      ID:
                        type: string
                        xml:
                          name: cbc:ID
                  AccountingSupplierParty:
                    type: object
                    xml:
                      name: cac:AccountingSupplierParty
                    properties:
                      Party:
                        type: object
                        xml:
                          name: cac:Party
                        properties:
                          PartyName:
                            type: object
                            xml:
                              name: cac:PartyName
                            properties:
                              Name:
                                type: string
                                xml:
                                  name: cbc:Name
                          PostalAddress:
                            type: object
                            xml:
                              name: cac:PostalAddress
                            properties:
                              StreetName:
                                type: string
                                xml:
                                  name: cbc:StreetName
                              Country:
                                type: object
                                xml:
                                  name: cac:Country
                                properties:
                                  IdentificationCode:
                                    type: string
                                    xml:
                                      name: cbc:IdentificationCode
                          Contact:
                            type: object
                            xml:
                              name: cac:Contact
                            properties:
                              Telephone:
                                type: string
                                xml:
                                  name: cbc:Telephone
                              ElectronicMail:
                                type: string
                                xml:
                                  name: cbc:ElectronicMail
                  AccountingCustomerParty:
                    type: object
                    xml:
                      name: cac:AccountingCustomerParty
                    properties:
                      Party:
                        type: object
                        xml:
                          name: cac:Party
                        properties:
                          PartyName:
                            type: object
                            xml:
                              name: cac:PartyName
                            properties:
                              Name:
                                type: string
                                xml:
                                  name: cbc:Name
                          PostalAddress:
                            type: object
                            xml:
                              name: cac:PostalAddress
                            properties:
                              StreetName:
                                type: string
                                xml:
                                  name: cbc:StreetName
                              Country:
                                type: object
                                xml:
                                  name: cac:Country
                                properties:
                                  IdentificationCode:
                                    type: string
                                    xml:
                                      name: cbc:IdentificationCode
                          Contact:
                            type: object
                            xml:
                              name: cac:Contact
                            properties:
                              Telephone:
                                type: string
                                xml:
                                  name: cbc:Telephone
                              ElectronicMail:
                                type: string
                                xml:
                                  name: cbc:ElectronicMail
                  PaymentMeans:
                    type: object
                    xml:
                      name: cac:PaymentMeans
                    properties:
                      PayeeFinancialAccount:
                        type: object
                        xml:
                          name: cac:PayeeFinancialAccount
                        properties:
                          ID:
                            type: string
                            xml:
                              name: cbc:ID
                          Name:
                            type: string
                            xml:
                              name: cbc:Name
                          FinancialInstitutionBranch:
                            type: object
                            xml:
                              name: cac:FinancialInstitutionBranch
                            properties:
                              ID:
                                type: string
                                xml:
                                  name: cbc:ID
                  LegalMonetaryTotal:
                    type: object
                    xml:
                      name: cac:LegalMonetaryTotal
                    properties:
                      PayableAmount:
                        type: object
                        xml:
                          name: cbc:PayableAmount
                        properties:
                          CurrencyId:
                            type: string
                            example: AUD
                            xml:
                              attribute: true
                          value:
                            type: number
                            format: double
                            description: Total amount payable
                            example: "0.00"
                  InvoiceLine:
                    type: array
                    xml:
                      name: cac:InvoiceLine
                    items:
                      type: object
                      properties:
                        ID:
                          type: string
                          xml:
                            name: cbc:ID
                        InvoicedQuantity:
                          type: number
                          format: integer
                          xml:
                            name: cbc:InvoicedQuantity
                        LineExtensionAmount:
                          type: number
                          format: double
                          xml:
                            name: cbc:LineExtensionAmount
                        Item:
                          type: object
                          xml: 
                            name: cac:Item
                          properties:
                            Name:
                              type: string
                              xml:
                                name: cbc:Name
                            ClassifiedTaxCategory:
                              type: object
                              xml:
                                name: cac:ClassifiedTaxCategory
                              properties:
                                ID:
                                  type: string
                                  xml:
                                    name: cbc:ID
                                TaxScheme:
                                  type: object
                                  xml:
                                    name: cac:TaxScheme
                                  properties:
                                    ID:
                                      type: string
                                      xml:
                                        name: cbc:ID
                        Price:
                          type: object
                          xml:
                            name: cac:Price
                          properties:
                            PriceAmount:
                              type: number
                              format: double
                              xml:
                                name: cbc:PriceAmount
                            BaseQuantity:
                              type: number
                              format: integer
                              xml:
                                name: cbc:BaseQuantity
        "400":
          description: Invalid invoiceid
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "403":
          description: Unauthorised access
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

    put:
      summary: Update an invoice
      description: |
        This endpoint updates an existing invoice identified by its ID. It allows modifications to fields such as supplier, buyer, total amount, currency, issue date, due date, and items, along with contact and payment details. Only allows users with access to perform changes
      operationId: updateInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                supplier:
                  type: string
                buyer:
                  type: string
                total:
                  type: number
                  format: double
                  example: 9.99
                currency:
                  type: string
                  description: 3 letter currency code
                  example: "AUD"
                issueDate:
                  type: string
                  format: date
                dueDate:
                  type: string
                  format: date
                items:
                  type: object
                  properties:
                    name: 
                      type: string
                    count:
                      type: number
                      example: 1
                      description: Must be greater than 0
                    price:
                      type: number
                      format: double
                      example: 9.99
                buyerAddress:
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the buyer
                    country:
                      type: string
                      description: Country code of the buyer
                buyerEmail:
                  type: string
                  format: email
                  description: Email address of the buyer
                buyerPhone:
                  type: string
                  description: Phone number of the buyer
                supplierAddress:
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the supplier
                    country:
                      type: string
                      description: Country code of the supplier
                supplierEmail:
                  type: string
                  format: email
                  description: Email address of the supplier
                supplierPhone:
                  type: string
                  description: Phone number of the supplier
                paymentAccountId:
                  type: string
                  description: Bank account number
                paymentAccountName:
                  type: string
                  description: Account name
                financialInstitutionBranchId:
                  type: string
                  description: Branch identifier such as BSB
                
      responses:
        "200":
          description: Invoice updated successfully
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "403":
          description: Unauthorised access
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

    delete:
      summary: Delete an invoice
      description: |
        This endpoint deletes a specific invoice identified by its ID, removing it from the system.
      operationId: deleteInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice deleted successfully
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "403":
          description: Unauthorised access
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/{invoiceid}/validate:
    post:
      summary: Validate invoice standard
      description: |
        This endpoint validates an invoice in the database against the UBL 2.4 standard as well as Australian Peppol standards.
      operationId: validateInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice validated successfully
        "400":
          description: |
            Invalid details:
            - Incorrect format
            - Total, price, and count must be greater than 0
            - Currency must be a valid 3-letter currency code
            - Issue date must not be in the future 
            - Due date must not be in the past
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "403":
          description: Unauthorised access
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
  /v1/invoices/create-and-validate:
    post:
      summary: Create and validate an invoice
      description: |
        This endpoint creates a new invoice and validates it against the UBL 2.4 standard as well as Australian Peppol standards.
      operationId: createAndValidateInvoice
      tags:
        - Invoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  type: object
                  properties:
                    supplier:
                      type: string
                      example: supplier name
                    buyer:
                      type: string
                      example: buyer name
                    total:
                      type: number
                      format: double
                      example: 9.99
                      description: Must be non-negative
                    currency:
                      type: string
                      description: Must be a valid 3 letter currency code
                    issueDate:
                      type: string
                      format: date
                      description: Must be a past date
                    dueDate:
                      type: string
                      format: date
                      description: Must be on or after the issue date
                    items:
                      type: object
                      properties:
                        name: 
                          type: string
                        count:
                          type: number
                          example: 1
                          description: Must be greater than 0
                        price:
                          type: number
                          format: double
                          example: 9.99
                    buyerAddress:
                      type: object
                      properties:
                        street:
                          type: string
                          description: Street address of the buyer
                        country:
                          type: string
                          description: Country code of the buyer
                    buyerEmail:
                      type: string
                      format: email
                      description: Email address of the buyer
                    buyerPhone:
                      type: string
                      description: Phone number of the buyer
                    supplierAddress:
                      type: object
                      properties:
                        street:
                          type: string
                          description: Street address of the supplier
                        country:
                          type: string
                          description: Country code of the supplier
                    supplierEmail:
                      type: string
                      format: email
                      description: Email address of the supplier
                    supplierPhone:
                      type: string
                      description: Phone number of the supplier
                    paymentAccountId:
                      type: string
                      description: Bank account number
                    paymentAccountName:
                      type: string
                      description: Account name
                    financialInstitutionBranchId:
                      type: string
                      description: Branch identifier such as BSB
      responses:
        "200":
          description: Invoice updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: string
                    example: INV-001
        "400":
          description: Invalid request body
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/health:
    get:
      summary: Check API's status
      description: |
        This endpoint checks the current status of the API, confirming whether it is running and accessible.
      operationId: checkAPIStatus
      tags:
        - System
      responses:
        "200":
          description: API is running
          
