openapi: 3.0.0
info:
  title: Invoice Management API
  description: API for managing invoices, users, and payments
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production Server
paths:
  /v1/user/register:
    post:
      summary: Register a new user
      operationId: registerUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                  example: "company name"
                  description: "Must be at least 3 characters long and contain only letters and spaces."
                password:
                  type: string
                  description: "Must be at least 8 characters long, include one uppercase letter, one number, and one special character."
                  example: password123!
              required:
                - email
                - name
                - password
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Invalid details
        "409":
          description: Email already registered

  /v1/user/login:
    post:
      summary: User login
      operationId: loginUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  example: password123!
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Invalid details

  /v1/user/logout:
    post:
      summary: User logout
      operationId: logoutUser
      tags:
        - Users
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Logout successful
        "401":
          description: Invalid token

  /v1/user:
    delete:
      summary: Remove user profile
      operationId: removeUser
      tags:
        - Users
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User removed successfully
        "401":
          description: Invalid token

  /v1/invoices:
    post:
      summary: Create a new invoice
      description: Need to add more for the info required, just included the basics for now
      operationId: createInvoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seller:
                  type: string
                  example: seller name
                buyer:
                  type: string
                  example: buyer name
                amount:
                  type: number
                  format: double
                currency:
                  type: string
                  description: currency 3 letter codes
                issueDate:
                  type: string
                  format: date
                dueDate:
                  type: string
                  format: date
      responses:
        "200":
          description: Invoice created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceid:
                    type: string
        "400":
          description: Invalid details
        "401":
          description: Invalid token

    get:
      summary: List invoices with optional filters
      operationId: listInvoices
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: ["pending", "paid", "overdue"]
          description: "Filter invoices by status."
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: "Number of invoices to return (default: 10)."
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
          description: "Pagination: number of invoices to skip (default: 0)."
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum: ["date_issued", "amount"]
          description: "Sort by date_issued or amount."
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum: ["asc", "desc"]
          description: "Sorting order: `asc` (ascending) or `desc` (descending)."
      responses:
        "200":
          description: List of invoices retrieved successfully
          content:
            application/xml:
              schema:
                type: array
                xml:
                  wrapped: true
                  name: Invoices
                  namespace: "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
                items:
                  type: object
                  xml:
                    name: Invoice
                  properties:
                    ID:
                      type: string
                      example: INV-001
                      xml:
                        name: cbc:ID
                    IssueDate:
                      type: string
                      format: date
                      xml:
                        name: cbc:IssueDate
                    AccountingSupplierParty:
                      type: object
                      xml:
                        name: cac:AccountingSupplierParty
                      properties:
                        Party:
                          type: object
                          xml:
                            name: cac:Party
                          properties:
                            Name:
                              type: string
                              xml:
                                name: cbc:Name
                    AccountingCustomerParty:
                      type: object
                      xml:
                        name: cac:AccountingCustomerParty
                      properties:
                        Party:
                          type: object
                          xml:
                            name: cac:Party
                          properties:
                            Name:
                              type: string
                              xml:
                                name: cbc:Name
                    LegalMonetaryTotal:
                      type: object
                      xml:
                        name: cac:LegalMonetaryTotal
                      properties:
                        PayableAmount:
                          type: object
                          xml:
                            name: cbc:PayableAmount
                          properties:
                            CurrencyId:
                              type: string
                              example: AUD
                              xml:
                                attribute: true
                            value:
                              type: number
                              format: double
                              description: Total amount payable
                              example: "0.00"
                    PaymentTerms:
                      type: object
                      xml:
                        name: cac:PaymentTerms
                      properties:
                        PaymentDueDate:
                          type: string
                          format: date
                          xml:
                            name: cbc:PaymentDueDate
                description: Array of UBL-compliant XML invoices
        "400":
          description: Invoice does not exist
        "401":
          description: Invalid token

  /v1/invoices/{invoiceid}:
    get:
      summary: retrieve an invoice
      operationId: getInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved invoice successfully
          content:
            application/xml:
              schema:
                type: object
                description: UBL-compliant XML invoice
                xml:
                  name: Invoice
                properties:
                  ID:
                    type: string
                    example: INV-001
                    xml:
                      name: cbc:ID
                  IssueDate:
                    type: string
                    format: date
                    xml:
                      name: cbc:IssueDate
                  AccountingSupplierParty:
                    type: object
                    xml:
                      name: cac:AccountingSupplierParty
                    properties:
                      Party:
                        type: object
                        xml:
                          name: cac:Party
                        properties:
                          Name:
                            type: string
                            xml:
                              name: cbc:Name
                  AccountingCustomerParty:
                    type: object
                    xml:
                      name: cac:AccountingCustomerParty
                    properties:
                      Party:
                        type: object
                        xml:
                          name: cac:Party
                        properties:
                          Name:
                            type: string
                            xml:
                              name: cbc:Name
                  LegalMonetaryTotal:
                    type: object
                    xml:
                      name: cac:LegalMonetaryTotal
                    properties:
                      PayableAmount:
                        type: object
                        xml:
                          name: cbc:PayableAmount
                        properties:
                          CurrencyId:
                            type: string
                            example: AUD
                            xml:
                              attribute: true
                          value:
                            type: number
                            format: double
                            description: Total amount payable
                            example: "0.00"
                  PaymentTerms:
                    type: object
                    xml:
                      name: cac:PaymentTerms
                    properties:
                      PaymentDueDate:
                        type: string
                        format: date
                        xml:
                          name: cbc:PaymentDueDate

        "400":
          description: Invalid invoiceid
        "401":
          description: Invalid token
        "403":
          description: Unauthorised access

    put:
      summary: Update an invoice
      operationId: updateInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seller:
                  type: string
                buyer:
                  type: string
                amount:
                  type: number
                  format: double
                currency:
                  type: string
                  description: 3 letter currency code
                  example: "AUD"
                issuedate:
                  type: string
                  format: date
                duedate:
                  type: string
                  format: date
      responses:
        "200":
          description: Invoice updated successfully
        "400":
          description: Invalid details
        "401":
          description: Invalid token
        "403":
          description: Unauthorised access

    delete:
      summary: Delete an invoice
      operationId: deleteInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice deleted successfully
        "400":
          description: Invalid details
        "401":
          description: Invalid token
        "403":
          description: Unauthorised access

  /v1/invoices/{invoiceid}/send:
    post:
      summary: Send an invoice to a user
      operationId: sendInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "buyer company name"

      responses:
        "200":
          description: Invoice sent successfully
        "400":
          description: Invalid details
        "401":
          description: Invalid token
        "403":
          description: Unauthorised access

  /v1/invoices/{invoiceid}/validate:
    post:
      summary: DISCUSS -- Validate invoice
      operationId: validateInvoice
      tags:
        - Invoices
      description: "DISCUSS -- does this need authentification; and does it do it itself or simply return true /false. Things to check for: dates, currency code, amount,,,"
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice validated successfully
        "400":
          description: Invalid details
        "401":
          description: Invalid token
        "403":
          description: Unauthorised access

  /v1/invoices/{invoiceid}/status:
    get:
      summary: Get invoice payment status
      operationId: getInvoiceStatus
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: ["pending", "paid", "overdue"]
        "401":
          description: Invalid token
        "403":
          description: Unauthorised access

  /v1/invoices/summary:
    get:
      summary: Get summary of invoices
      operationId: getInvoiceSummary
      tags:
        - Invoices
      description: "discuss on how we want to do this; right now: shows breakdown of the user's payable and receivable invoices"
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice summary retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  payable:
                    type: object
                    description: invoices yet to be paid
                    properties:
                      pending:
                        type: number
                        format: integer
                      paid:
                        type: number
                        format: integer
                      overdue:
                        type: number
                        format: integer
                  receivable:
                    type: object
                    description: invoices payments yet to be collected
                    properties:
                      pending:
                        type: number
                        format: integer
                      paid:
                        type: number
                        format: integer
                      overdue:
                        type: number
                        format: integer
        "400":
          description: Invalid token

  /v1/health:
    get:
      summary: Check API’s status
      operationId: checkAPIStatus
      tags:
        - System
      responses:
        "200":
          description: API is running
