openapi: 3.0.0
info:
  title: M15ASushi - Invoice Management API
  description: API for creating validated UBL 2.4-compliant invoices.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production Server
paths:
  /v1/user/register:
    post:
      summary: Register a new user
      operationId: registerUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                  example: "company name"
                  description: "Must be at least 3 characters long and contain only letters and spaces."
                password:
                  type: string
                  description: "Must be at least 8 characters long, include one uppercase letter, one number, and one special character."
                  example: password123!
              required:
                - email
                - name
                - password
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "409":
          description: Email already registered
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/user/login:
    post:
      summary: User login
      operationId: loginUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  example: password123!
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/user/logout:
    post:
      summary: User logout
      operationId: logoutUser
      tags:
        - Users
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Logout successful
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/user:
    put:
      summary: Update user profile
      operationId: updateUser
      tags:
        - Users
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: "New email address (optional)."
                name:
                  type: string
                  description: "New name (must be at least 3 characters long, only letters and spaces, optional)."
                password:
                  type: string
                  description: "New password (must be at least 8 characters long, include one uppercase letter, one number, and one special character, optional)."
              example:
                email: newemail@example.com
                name: "New Company Name"
                password: "NewPassword123!"
      responses:
        "200":
          description: User updated successfully
        "400":
          description: Invalid details -- see schema
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "409":
          description: Email already in use
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
                    
    delete:
      summary: Remove user profile
      operationId: removeUser
      tags:
        - Users
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User removed successfully
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices:
    post:
      summary: Create a new invoice
      description: For this version we are just including the basic fields but will add more on later.
      operationId: createInvoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seller:
                  type: string
                  example: seller name
                buyer:
                  type: string
                  example: buyer name
                total:
                  type: number
                  format: double
                  example: 9.99
                  description: Must be non-negative
                currency:
                  type: string
                  description: Must be a valid 3 letter currency code
                issueDate:
                  type: string
                  format: date
                  description: Must be a past date
                dueDate:
                  type: string
                  format: date
                  description: Must be on or after the issue date
                items:
                  type: object
                  properties:
                    name: 
                      type: string
                    count:
                      type: number
                      example: 1
                      description: Must be greater than 0
                    price:
                      type: number
                      format: double
                      example: 9.99
      responses:
        "200":
          description: Invoice created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceid:
                    type: string
        "400":
          description: If there are any missing fields in the request body. 
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

    get:
      summary: List invoices with optional filters
      description: |
        Retrieve a list of invoices belonging to the user. Optional filters include:
        - **limit**: maximum number of invoices to return: must be greater than 0.
        - **offset**: number of invoices to skip; maximum offset equals '*number of invoices* - *limit*'. Inputted offsets greater than this should be automatically changed to the maximum.
        - **sort**: what field to sort in terms of; valid fields are: 'issuedate', 'duedate' or 'total'.
        - **order**: ascending or descending order; valid queries are: 'asc' or 'desc'.
      operationId: listInvoices
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: "Number of invoices to return (default: 10)."
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
          description: "Pagination: number of invoices to skip (default: 0)."
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum: ["issuedate", "duedate", "total"]
          description: "Sort by field"
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum: ["asc", "desc"]
          description: "Sorting order"
      responses:
        "200":
          description: List of invoices retrieved successfully
          content:
            application/xml:
              schema:
                type: array
                xml:
                  wrapped: true
                  name: Invoices
                  namespace: "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
                items:
                  type: object
                  xml:
                    name: Invoice
                  properties:
                    ID:
                      type: string
                      example: INV-001
                      xml:
                        name: cbc:ID
                    IssueDate:
                      type: string
                      format: date
                      xml:
                        name: cbc:IssueDate
                    AccountingSupplierParty:
                      type: object
                      xml:
                        name: cac:AccountingSupplierParty
                      properties:
                        Party:
                          type: object
                          xml:
                            name: cac:Party
                          properties:
                            Name:
                              type: string
                              xml:
                                name: cbc:Name
                    AccountingCustomerParty:
                      type: object
                      xml:
                        name: cac:AccountingCustomerParty
                      properties:
                        Party:
                          type: object
                          xml:
                            name: cac:Party
                          properties:
                            Name:
                              type: string
                              xml:
                                name: cbc:Name
                    LegalMonetaryTotal:
                      type: object
                      xml:
                        name: cac:LegalMonetaryTotal
                      properties:
                        PayableAmount:
                          type: object
                          xml:
                            name: cbc:PayableAmount
                          properties:
                            CurrencyId:
                              type: string
                              example: AUD
                              xml:
                                attribute: true
                            value:
                              type: number
                              format: double
                              description: Total amount payable
                              example: "0.00"
                    PaymentTerms:
                      type: object
                      xml:
                        name: cac:PaymentTerms
                      properties:
                        PaymentDueDate:
                          type: string
                          format: date
                          xml:
                            name: cbc:PaymentDueDate
                    InvoiceLine:
                      type: object
                      xml:
                        name: cac:InvoiceLine
                      properties:
                        InvoicedQuantity:
                          type: number
                          format: integer
                          xml:
                            name: cbc:InvoicedQuantity
                        LineExtensionAmount:
                          type: number
                          format: double
                          xml:
                            name: LineExtensionAmount
                        Item:
                          type: object
                          xml: 
                            name: cac:Item
                          properties:
                            Name:
                              type: string
                              xml:
                                name: cbc:Name
                description: Array of UBL-compliant XML invoices
        "400":
          description: |
            Invalid details:
            - limit less than 1
            - offset less than 0
            - invalid sort query
            - invalid order query
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/{invoiceid}:
    get:
      summary: retrieve an invoice
      operationId: getInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved invoice successfully
          content:
            application/xml:
              schema:
                type: object
                description: UBL-compliant XML invoice
                xml:
                  name: Invoice
                properties:
                  ID:
                    type: string
                    example: INV-001
                    xml:
                      name: cbc:ID
                  IssueDate:
                    type: string
                    format: date
                    xml:
                      name: cbc:IssueDate
                  AccountingSupplierParty:
                    type: object
                    xml:
                      name: cac:AccountingSupplierParty
                    properties:
                      Party:
                        type: object
                        xml:
                          name: cac:Party
                        properties:
                          Name:
                            type: string
                            xml:
                              name: cbc:Name
                  AccountingCustomerParty:
                    type: object
                    xml:
                      name: cac:AccountingCustomerParty
                    properties:
                      Party:
                        type: object
                        xml:
                          name: cac:Party
                        properties:
                          Name:
                            type: string
                            xml:
                              name: cbc:Name
                  PaymentTerms:
                    type: object
                    xml:
                      name: cac:PaymentTerms
                    properties:
                      PaymentDueDate:
                        type: string
                        format: date
                        xml:
                          name: cbc:PaymentDueDate
                  LegalMonetaryTotal:
                    type: object
                    xml:
                      name: cac:LegalMonetaryTotal
                    properties:
                      PayableAmount:
                        type: object
                        xml:
                          name: cbc:PayableAmount
                        properties:
                          CurrencyId:
                            type: string
                            example: AUD
                            xml:
                              attribute: true
                          value:
                            type: number
                            format: double
                            description: Total amount payable
                            example: "0.00"
                  InvoiceLine:
                    type: object
                    xml:
                      name: cac:InvoiceLine
                    properties:
                      InvoicedQuantity:
                        type: number
                        format: integer
                        xml:
                          name: cbc:InvoicedQuantity
                      LineExtensionAmount:
                        type: number
                        format: double
                        xml:
                          name: LineExtensionAmount
                      Item:
                        type: object
                        xml: 
                          name: cac:Item
                        properties:
                          Name:
                            type: string
                            xml:
                              name: cbc:Name
        "400":
          description: Invalid invoiceid
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "403":
          description: Unauthorised access
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

    put:
      summary: Update an invoice
      operationId: updateInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seller:
                  type: string
                buyer:
                  type: string
                total:
                  type: number
                  format: double
                  example: 9.99
                currency:
                  type: string
                  description: 3 letter currency code
                  example: "AUD"
                issueDate:
                  type: string
                  format: date
                dueDate:
                  type: string
                  format: date
                items:
                  type: object
                  properties:
                    name: 
                      type: string
                    count:
                      type: number
                      example: 1
                      description: Must be greater than 0
                    price:
                      type: number
                      format: double
                      example: 9.99
                
      responses:
        "200":
          description: Invoice updated successfully
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "403":
          description: Unauthorised access
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

    delete:
      summary: Delete an invoice
      operationId: deleteInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice deleted successfully
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "403":
          description: Unauthorised access
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/{invoiceid}/send:
    post:
      summary: Send an invoice to a user
      description: for this version, just internally shares (with restricted access; view only) the invoice with another user so that they can only view it using our API. 
      operationId: sendInvoice
      tags:
        - Invoice Management (Future Implementation)
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "buyer company name"

      responses:
        "200":
          description: Invoice sent successfully
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "403":
          description: Unauthorised access
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/{invoiceid}/validate:
    post:
      summary: Validate invoice fields
      description: |
        For this version: checks the user's JSON input for valid fields such as name, total, currency code, etc and returns a 200 if valid, else a 400 if invalid. Only valid invoices can be stored. 
      operationId: validateInvoice
      tags:
        - Invoices
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice validated successfully
        "400":
          description: |
            Invalid details:
            - Incorrect format
            - Total, price, and count must be greater than 0
            - Currency must be a valid 3-letter currency code
            - Issue date must not be in the future 
            - Due date must not be in the past
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "403":
          description: Unauthorised access
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/{invoiceid}/status:
    get:
      summary: Get invoice payment status
      operationId: getInvoiceStatus
      tags:
        - Invoice Management (Future Implementation)
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: ["pending", "paid", "overdue"]
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "403":
          description: Unauthorised access
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/summary:
    get:
      summary: Get summary of invoices
      operationId: getInvoiceSummary
      tags:
        - Invoice Management (Future Implementation)
      description: "discuss on how we want to do this; right now: shows breakdown of the user's payable and receivable invoices"
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice summary retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  payable:
                    type: object
                    description: invoices yet to be paid
                    properties:
                      pending:
                        type: number
                        format: integer
                      paid:
                        type: number
                        format: integer
                      overdue:
                        type: number
                        format: integer
                  receivable:
                    type: object
                    description: invoices payments yet to be collected
                    properties:
                      pending:
                        type: number
                        format: integer
                      paid:
                        type: number
                        format: integer
                      overdue:
                        type: number
                        format: integer
        "400":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/health:
    get:
      summary: Check API’s status
      operationId: checkAPIStatus
      tags:
        - System
      responses:
        "200":
          description: API is running
          
