stages:
  - lint
  - test
  - build
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - backend/node_modules/
    - frontend/node_modules/

lint-backend:
  stage: lint
  image: node:16
  script:
    - cd backend
    - npm install
    - npm run lint
  only:
    - branches
    - merge_requests

test-backend:
  stage: test
  image: node:16
  script:
    - cd backend
    - npm install
    - npx jest
  only:
    - branches
    - merge_requests

build-and-deploy:
  stage: build
  image: node:16
  script:
    # Install zip & AWS CLI
    - apt-get update && apt-get install -y zip curl unzip
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install

    # Build frontend
    - cd frontend
    - npm install
    - npm run build
    - cd ..

    # Build backend
    - cd backend
    - npm install
    - cd ..

    # Create deployment structure
    - mkdir -p deploy
    - cp -r backend deploy/
    - mkdir -p deploy/public
    - cp -r frontend/build/* deploy/public/

    # Include config files
    - cp -r .ebextensions deploy/ || true
    - cp Procfile deploy/ || true

    # üîç Log structure of deploy folder
    - echo "==== DEPLOY DIRECTORY STRUCTURE ===="
    - find deploy -type f
    - echo "==== DEPLOY FOLDER TREE ===="
    - tree deploy || ls -R deploy

    # Zip & upload
    - cd deploy
    - zip -r ../app.zip .
    - cd ..

    # Upload versioned
    - aws s3 cp app.zip s3://$S3_BUCKET_NAME/app-$CI_PIPELINE_ID.zip --region $AWS_REGION

    # Upload to fixed name for CodePipeline to use
    - aws s3 cp app.zip s3://$S3_BUCKET_NAME/app.zip --region $AWS_REGION
  only:
    - main
